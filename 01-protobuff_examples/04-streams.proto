syntax = "proto3";

// este cuarto ejemplo se utiliza para mostrar el uso de los flujos de mensajes (stream) siendo unidireccionales y bidireccionales.
// declara un servicio con 3 m√©todos usando flujos (unidireccionales de un lado y otro y bidireccionales).

service SensorService {
  // Stream de servidor
  rpc GetTemperature(TemperatureRequest) returns (stream TemperatureReading);
  // Stream de client
  rpc NotifyTemperature(stream SensorTemperatureReading) returns (SensorTemperatureResponse);
  // Stream bidireccional
  rpc CheckActuatorStatus(stream SensorTemperatureReading) returns (stream ActuatorStatus);
}

// aqui los tipos de mensajes utilizados, igual que en los ejemplos anteriores,.

message TemperatureRequest {
  int32 sensorId = 1;
}

message TemperatureReading {
  float temperature = 1;
}

message SensorTemperatureReading {
  int32 id = 1;
  float temperature = 2;
}

message SensorTemperatureResponse {
  int32 count = 1;
}

message ActuatorStatus {
  bool enabled = 1;
}